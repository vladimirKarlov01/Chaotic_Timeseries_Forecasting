test: 99 000 -- 100 000

train.size = 10 000
test.size = 1000

у нас пока что 1000 и 100 соответсвенно



TRAIN ******* TEST.begin ....[i - k - 40.......i - k]... i ... TEST.end

for i in TEST:
    for k in range(1, 100):

                       i-k+1 i-k+2     i

Обучение -> множества (для каждого шаблона) всех векторов, полученных прикладыванием шаблона определенной конфигурации
                                                  + кластеризация каждого такого множества с целью выделения паттернов


Тогда точка, к которой прикладывается самый правый зубец шаблона?


....|..|....|.....*


Для каждого k нужно сделать массив предыщих 40 -- [i - k - 40, i - k] точек и по мере прогнозирования по одной точке
добавлять


В тестовой выборке добавляем к 1000 первые 140 элементов для того чтобы прогнозироватть первую точку за к шагов для к из (1, 100)

plt.plot(X,Y, ...)
X = [x_1, x_2, x_3 ... x_10]
Y = [y_1, y_2, y_3 ... y_10]
[(x_1, y_1),(), ... ()]

========================================================================================================================

for shifted_template in shifts_for_each_template[template_number]:
    if np.linalg.norm(to_forecast - shifted_template[:3]) <= 0.01:
        prediction = np.append(prediction, shifted_template[3])

переделать в filter или distance_matrix <= 0.01

Q&A SECTION:
1. Нужно ли считать непрогнозируемые точки в RMSE? Если считать, то как?
2. Откуда взялось число 40, если 4 зубца с максисмальным расстоянием между соседними 10

https://docs-python.ru/standart-library/paket-multiprocessing-python/brief-description/

========================================================================================================================

templates_by_distances - все возможные КОНФИГУРАЦИИ шаблонов, заданные длиной между соседними зубцами

shifts_for_each_template - список из массивов сдвигов (уже значения из ряда) для каждой конкретной конфигурации

========================================================================================================================

                                            ПОДХОД PUSH

**....**|(100)(90)(80)...(10)

**....**|#(90)(80)...(10)

**....**|#(90)(80)...(10)(...)...(...)


Необходимо при завершении прогноза для каждой точки двигаться на 10 вперед

Параметр: число шагов после которого мы начинаем двигаться вперед -- то есть не каждый шаг по 10, а сначала
продвинуться в 10 следующих на скольоко-то, а затем проложить еще на 10 вперед (???)

Опции:
1. Сначала сдвигаемся на 10, потом перепрогнозируем 10;
2. Сначала перепрогнозируем до 10, потом сдвигаемся;
3. Перпрогнозируем по 1.

Вопросы:
1. Стоит ли каким-то образом пытаться не смотреть на шаблоны, которые для данной точки уже прикладывали раньше.
То есть, если значение было сформировано на 80%, то мы будем прикладывать только оставшиеся 20% шаблонов.
2. Кластеризация на каждой итерации????

Нулевая итерация:
1. На 10 вперед

НЕнулевая итерация:
1. Добавляем одну точку с абсолютным прогнозом
2. Перепрогнозирование 9(или все?) точек
3. На 10 вперед































